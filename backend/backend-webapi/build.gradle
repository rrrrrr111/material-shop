import java.time.LocalDateTime

import static java.lang.System.getProperty

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'application'

configurations {
    developmentOnly // одельная конфигурация для исключения зависимостей при сборке на пром
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

dependencies {
    developmentOnly("org.springframework.boot:spring-boot-devtools:$springBootVersion")
    developmentOnly(files("$confLocalDir"))
    compile project(":backend-db-model")
    compile("org.springframework.boot:spring-boot-starter:$springBootVersion")
    compile("org.springframework.boot:spring-boot-starter-actuator:$springBootVersion")
    compile("org.springframework.boot:spring-boot-starter-web:$springBootVersion")
    compile("org.springframework.boot:spring-boot-starter-thymeleaf:$springBootVersion")
    compile("org.springframework.boot:spring-boot-starter-security:$springBootVersion")
    compile("org.springframework.boot:spring-boot-starter-logging:$springBootVersion")
    compile("org.springframework.boot:spring-boot-starter-jooq:$springBootVersion")
    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.8.1'


    runtime("org.springframework.boot:spring-boot-starter-tomcat:$springBootVersion")
    runtime("org.postgresql:postgresql:$postgreDriverVersion")
    // https://mvnrepository.com/artifact/org.testng/testng
    testCompile group: 'org.testng', name: 'testng', version: '6.14.3'
    testCompile("org.springframework.boot:spring-boot-starter-test:$springBootVersion")
}

mainClassName = 'ru.rich.matshop.webapi.Start'

springBoot {
    buildInfo() //
}

bootJar { // описание для сборки итогового jar-ника cо Spring Boot
    baseName = 'matshop-beckend-webapi'
    manifest {
        attributes([
                'Manifest-Version': '1.0',
                'Application'     : "${rootProject.name} ${version}",
                'Created-By'      : "Gradle " + LocalDateTime.now()
                        + ', Java ' + getProperty("java.version") + ' ' + getProperty("java.vendor")
                        + ', ' + getProperty("os.name") + ' ' + getProperty("os.version")
        ])
    }
}

buildscript { 
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion")
    }
}

