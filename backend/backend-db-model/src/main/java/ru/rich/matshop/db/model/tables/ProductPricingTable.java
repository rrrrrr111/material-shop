/*
 * This file is generated by jOOQ.
 */
package ru.rich.matshop.db.model.tables;


import java.util.Arrays;
import java.util.Date;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.rich.matshop.db.converters.TimestampConverter;
import ru.rich.matshop.db.model.Indexes;
import ru.rich.matshop.db.model.Keys;
import ru.rich.matshop.db.model.Matshop;
import ru.rich.matshop.db.model.tables.records.ProductPricingRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProductPricingTable extends TableImpl<ProductPricingRecord> {

    private static final long serialVersionUID = -1856190400;

    /**
     * The reference instance of <code>matshop.product_pricing</code>
     */
    public static final ProductPricingTable PRODUCT_PRICING = new ProductPricingTable();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ProductPricingRecord> getRecordType() {
        return ProductPricingRecord.class;
    }

    /**
     * The column <code>matshop.product_pricing.id</code>.
     */
    public final TableField<ProductPricingRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('product_pricing_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>matshop.product_pricing.shop_id</code>.
     */
    public final TableField<ProductPricingRecord, Integer> SHOP_ID = createField("shop_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>matshop.product_pricing.pricing</code>.
     */
    public final TableField<ProductPricingRecord, String> PRICING = createField("pricing", org.jooq.impl.SQLDataType.VARCHAR(4000).nullable(false), this, "");

    /**
     * The column <code>matshop.product_pricing.edit_date</code>.
     */
    public final TableField<ProductPricingRecord, Date> EDIT_DATE = createField("edit_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "", new TimestampConverter());

    /**
     * Create a <code>matshop.product_pricing</code> table reference
     */
    public ProductPricingTable() {
        this(DSL.name("product_pricing"), null);
    }

    /**
     * Create an aliased <code>matshop.product_pricing</code> table reference
     */
    public ProductPricingTable(String alias) {
        this(DSL.name(alias), PRODUCT_PRICING);
    }

    /**
     * Create an aliased <code>matshop.product_pricing</code> table reference
     */
    public ProductPricingTable(Name alias) {
        this(alias, PRODUCT_PRICING);
    }

    private ProductPricingTable(Name alias, Table<ProductPricingRecord> aliased) {
        this(alias, aliased, null);
    }

    private ProductPricingTable(Name alias, Table<ProductPricingRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> ProductPricingTable(Table<O> child, ForeignKey<O, ProductPricingRecord> key) {
        super(child, key, PRODUCT_PRICING);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Matshop.MATSHOP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PRODUCT_PRICING_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ProductPricingRecord, Long> getIdentity() {
        return Keys.IDENTITY_PRODUCT_PRICING;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ProductPricingRecord> getPrimaryKey() {
        return Keys.PRODUCT_PRICING_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ProductPricingRecord>> getKeys() {
        return Arrays.<UniqueKey<ProductPricingRecord>>asList(Keys.PRODUCT_PRICING_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProductPricingTable as(String alias) {
        return new ProductPricingTable(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProductPricingTable as(Name alias) {
        return new ProductPricingTable(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ProductPricingTable rename(String name) {
        return new ProductPricingTable(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ProductPricingTable rename(Name name) {
        return new ProductPricingTable(name, null);
    }
}
