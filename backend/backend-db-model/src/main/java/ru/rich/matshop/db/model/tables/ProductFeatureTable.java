/*
 * This file is generated by jOOQ.
 */
package ru.rich.matshop.db.model.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.rich.matshop.db.model.Indexes;
import ru.rich.matshop.db.model.Keys;
import ru.rich.matshop.db.model.Matshop;
import ru.rich.matshop.db.model.tables.records.ProductFeatureRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProductFeatureTable extends TableImpl<ProductFeatureRecord> {

    private static final long serialVersionUID = -1806841409;

    /**
     * The reference instance of <code>matshop.product_feature</code>
     */
    public static final ProductFeatureTable PRODUCT_FEATURE = new ProductFeatureTable();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ProductFeatureRecord> getRecordType() {
        return ProductFeatureRecord.class;
    }

    /**
     * The column <code>matshop.product_feature.id</code>.
     */
    public final TableField<ProductFeatureRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('product_feature_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>matshop.product_feature.shop_id</code>.
     */
    public final TableField<ProductFeatureRecord, Integer> SHOP_ID = createField("shop_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>matshop.product_feature.key</code>.
     */
    public final TableField<ProductFeatureRecord, String> KEY = createField("key", org.jooq.impl.SQLDataType.VARCHAR(1000).nullable(false), this, "");

    /**
     * The column <code>matshop.product_feature.name</code>.
     */
    public final TableField<ProductFeatureRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(1000), this, "");

    /**
     * The column <code>matshop.product_feature.type</code>.
     */
    public final TableField<ProductFeatureRecord, String> TYPE = createField("type", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * Create a <code>matshop.product_feature</code> table reference
     */
    public ProductFeatureTable() {
        this(DSL.name("product_feature"), null);
    }

    /**
     * Create an aliased <code>matshop.product_feature</code> table reference
     */
    public ProductFeatureTable(String alias) {
        this(DSL.name(alias), PRODUCT_FEATURE);
    }

    /**
     * Create an aliased <code>matshop.product_feature</code> table reference
     */
    public ProductFeatureTable(Name alias) {
        this(alias, PRODUCT_FEATURE);
    }

    private ProductFeatureTable(Name alias, Table<ProductFeatureRecord> aliased) {
        this(alias, aliased, null);
    }

    private ProductFeatureTable(Name alias, Table<ProductFeatureRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> ProductFeatureTable(Table<O> child, ForeignKey<O, ProductFeatureRecord> key) {
        super(child, key, PRODUCT_FEATURE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Matshop.MATSHOP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.IDX_CAT_KEY, Indexes.IDX_CAT_NAME, Indexes.PRODUCT_FEATURE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ProductFeatureRecord, Long> getIdentity() {
        return Keys.IDENTITY_PRODUCT_FEATURE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ProductFeatureRecord> getPrimaryKey() {
        return Keys.PRODUCT_FEATURE_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ProductFeatureRecord>> getKeys() {
        return Arrays.<UniqueKey<ProductFeatureRecord>>asList(Keys.PRODUCT_FEATURE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProductFeatureTable as(String alias) {
        return new ProductFeatureTable(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProductFeatureTable as(Name alias) {
        return new ProductFeatureTable(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ProductFeatureTable rename(String name) {
        return new ProductFeatureTable(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ProductFeatureTable rename(Name name) {
        return new ProductFeatureTable(name, null);
    }
}
