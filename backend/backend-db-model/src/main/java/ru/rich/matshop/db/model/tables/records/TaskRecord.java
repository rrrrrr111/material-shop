/*
 * This file is generated by jOOQ.
 */
package ru.rich.matshop.db.model.tables.records;


import java.util.Date;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;

import ru.rich.matshop.db.model.tables.TaskTable;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TaskRecord extends UpdatableRecordImpl<TaskRecord> implements Record7<Long, String, String, String, Date, Long, Date> {

    private static final long serialVersionUID = 720675068;

    /**
     * Setter for <code>matshop.task.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>matshop.task.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>matshop.task.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>matshop.task.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>matshop.task.type</code>.
     */
    public void setType(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>matshop.task.type</code>.
     */
    public String getType() {
        return (String) get(2);
    }

    /**
     * Setter for <code>matshop.task.state</code>.
     */
    public void setState(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>matshop.task.state</code>.
     */
    public String getState() {
        return (String) get(3);
    }

    /**
     * Setter for <code>matshop.task.last_data_date</code>.
     */
    public void setLastDataDate(Date value) {
        set(4, value);
    }

    /**
     * Getter for <code>matshop.task.last_data_date</code>.
     */
    public Date getLastDataDate() {
        return (Date) get(4);
    }

    /**
     * Setter for <code>matshop.task.last_data_id</code>.
     */
    public void setLastDataId(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>matshop.task.last_data_id</code>.
     */
    public Long getLastDataId() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>matshop.task.edit_date</code>.
     */
    public void setEditDate(Date value) {
        set(6, value);
    }

    /**
     * Getter for <code>matshop.task.edit_date</code>.
     */
    public Date getEditDate() {
        return (Date) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Long, String, String, String, Date, Long, Date> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Long, String, String, String, Date, Long, Date> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return TaskTable.TASK.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return TaskTable.TASK.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return TaskTable.TASK.TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return TaskTable.TASK.STATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field5() {
        return TaskTable.TASK.LAST_DATA_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field6() {
        return TaskTable.TASK.LAST_DATA_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field7() {
        return TaskTable.TASK.EDIT_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getState();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date component5() {
        return getLastDataDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component6() {
        return getLastDataId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date component7() {
        return getEditDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getState();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value5() {
        return getLastDataDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value6() {
        return getLastDataId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value7() {
        return getEditDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskRecord value3(String value) {
        setType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskRecord value4(String value) {
        setState(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskRecord value5(Date value) {
        setLastDataDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskRecord value6(Long value) {
        setLastDataId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskRecord value7(Date value) {
        setEditDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskRecord values(Long value1, String value2, String value3, String value4, Date value5, Long value6, Date value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TaskRecord
     */
    public TaskRecord() {
        super(TaskTable.TASK);
    }

    /**
     * Create a detached, initialised TaskRecord
     */
    public TaskRecord(Long id, String name, String type, String state, Date lastDataDate, Long lastDataId, Date editDate) {
        super(TaskTable.TASK);

        set(0, id);
        set(1, name);
        set(2, type);
        set(3, state);
        set(4, lastDataDate);
        set(5, lastDataId);
        set(6, editDate);
    }
}
