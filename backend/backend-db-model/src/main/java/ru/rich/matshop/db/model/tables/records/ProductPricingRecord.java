/*
 * This file is generated by jOOQ.
 */
package ru.rich.matshop.db.model.tables.records;


import java.util.Date;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import ru.rich.matshop.db.model.tables.ProductPricingTable;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProductPricingRecord extends UpdatableRecordImpl<ProductPricingRecord> implements Record4<Long, Integer, String, Date> {

    private static final long serialVersionUID = 1711425609;

    /**
     * Setter for <code>matshop.product_pricing.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>matshop.product_pricing.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>matshop.product_pricing.shop_id</code>.
     */
    public void setShopId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>matshop.product_pricing.shop_id</code>.
     */
    public Integer getShopId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>matshop.product_pricing.pricing</code>.
     */
    public void setPricing(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>matshop.product_pricing.pricing</code>.
     */
    public String getPricing() {
        return (String) get(2);
    }

    /**
     * Setter for <code>matshop.product_pricing.edit_date</code>.
     */
    public void setEditDate(Date value) {
        set(3, value);
    }

    /**
     * Getter for <code>matshop.product_pricing.edit_date</code>.
     */
    public Date getEditDate() {
        return (Date) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Long, Integer, String, Date> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Long, Integer, String, Date> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return ProductPricingTable.PRODUCT_PRICING.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return ProductPricingTable.PRODUCT_PRICING.SHOP_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return ProductPricingTable.PRODUCT_PRICING.PRICING;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field4() {
        return ProductPricingTable.PRODUCT_PRICING.EDIT_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getShopId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getPricing();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date component4() {
        return getEditDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getShopId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getPricing();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value4() {
        return getEditDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProductPricingRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProductPricingRecord value2(Integer value) {
        setShopId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProductPricingRecord value3(String value) {
        setPricing(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProductPricingRecord value4(Date value) {
        setEditDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProductPricingRecord values(Long value1, Integer value2, String value3, Date value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProductPricingRecord
     */
    public ProductPricingRecord() {
        super(ProductPricingTable.PRODUCT_PRICING);
    }

    /**
     * Create a detached, initialised ProductPricingRecord
     */
    public ProductPricingRecord(Long id, Integer shopId, String pricing, Date editDate) {
        super(ProductPricingTable.PRODUCT_PRICING);

        set(0, id);
        set(1, shopId);
        set(2, pricing);
        set(3, editDate);
    }
}
