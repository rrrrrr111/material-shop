/*
 * This file is generated by jOOQ.
 */
package ru.rich.matshop.db.model.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.rich.matshop.db.model.Indexes;
import ru.rich.matshop.db.model.Keys;
import ru.rich.matshop.db.model.Matshop;
import ru.rich.matshop.db.model.tables.records.ShopOrderGoodsRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ShopOrderGoods extends TableImpl<ShopOrderGoodsRecord> {

    private static final long serialVersionUID = -1537374845;

    /**
     * The reference instance of <code>matshop.shop_order_goods</code>
     */
    public static final ShopOrderGoods SHOP_ORDER_GOODS = new ShopOrderGoods();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ShopOrderGoodsRecord> getRecordType() {
        return ShopOrderGoodsRecord.class;
    }

    /**
     * The column <code>matshop.shop_order_goods.id</code>.
     */
    public final TableField<ShopOrderGoodsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('shop_order_goods_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>matshop.shop_order_goods.shop_order_id</code>.
     */
    public final TableField<ShopOrderGoodsRecord, Integer> SHOP_ORDER_ID = createField("shop_order_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>matshop.shop_order_goods.product_id</code>.
     */
    public final TableField<ShopOrderGoodsRecord, Integer> PRODUCT_ID = createField("product_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>matshop.shop_order_goods.quantity</code>.
     */
    public final TableField<ShopOrderGoodsRecord, Integer> QUANTITY = createField("quantity", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>matshop.shop_order_goods.price</code>.
     */
    public final TableField<ShopOrderGoodsRecord, Long> PRICE = createField("price", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>matshop.shop_order_goods</code> table reference
     */
    public ShopOrderGoods() {
        this(DSL.name("shop_order_goods"), null);
    }

    /**
     * Create an aliased <code>matshop.shop_order_goods</code> table reference
     */
    public ShopOrderGoods(String alias) {
        this(DSL.name(alias), SHOP_ORDER_GOODS);
    }

    /**
     * Create an aliased <code>matshop.shop_order_goods</code> table reference
     */
    public ShopOrderGoods(Name alias) {
        this(alias, SHOP_ORDER_GOODS);
    }

    private ShopOrderGoods(Name alias, Table<ShopOrderGoodsRecord> aliased) {
        this(alias, aliased, null);
    }

    private ShopOrderGoods(Name alias, Table<ShopOrderGoodsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> ShopOrderGoods(Table<O> child, ForeignKey<O, ShopOrderGoodsRecord> key) {
        super(child, key, SHOP_ORDER_GOODS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Matshop.MATSHOP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.IDX_SOG_PRODUCT_ID, Indexes.IDX_SOG_SHOP_ORDER_ID, Indexes.SHOP_ORDER_GOODS_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ShopOrderGoodsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_SHOP_ORDER_GOODS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ShopOrderGoodsRecord> getPrimaryKey() {
        return Keys.SHOP_ORDER_GOODS_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ShopOrderGoodsRecord>> getKeys() {
        return Arrays.<UniqueKey<ShopOrderGoodsRecord>>asList(Keys.SHOP_ORDER_GOODS_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ShopOrderGoodsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ShopOrderGoodsRecord, ?>>asList(Keys.SHOP_ORDER_GOODS__SHOP_ORDER_GOODS_SHOP_ORDER_ID_FKEY, Keys.SHOP_ORDER_GOODS__SHOP_ORDER_GOODS_PRODUCT_ID_FKEY);
    }

    public ShopOrder shopOrder() {
        return new ShopOrder(this, Keys.SHOP_ORDER_GOODS__SHOP_ORDER_GOODS_SHOP_ORDER_ID_FKEY);
    }

    public Product product() {
        return new Product(this, Keys.SHOP_ORDER_GOODS__SHOP_ORDER_GOODS_PRODUCT_ID_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ShopOrderGoods as(String alias) {
        return new ShopOrderGoods(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ShopOrderGoods as(Name alias) {
        return new ShopOrderGoods(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ShopOrderGoods rename(String name) {
        return new ShopOrderGoods(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ShopOrderGoods rename(Name name) {
        return new ShopOrderGoods(name, null);
    }
}
